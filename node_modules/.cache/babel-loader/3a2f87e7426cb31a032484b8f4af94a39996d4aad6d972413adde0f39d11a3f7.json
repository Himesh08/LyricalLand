{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_dev_proj_h\\\\lyricalland\\\\src\\\\Context\\\\Context.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n// import { res1 } from '../Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrackContext = /*#__PURE__*/React.createContext();\nconst TrackContextProvider = ({\n  children\n}) => {\n  _s();\n  let intialState = {\n    track_list: [],\n    heading: \"Top 10 Songs\"\n    // dispatch: action => this.setState(state => reducer(state, action))\n  };\n  const [state, setState] = useState(intialState);\n  const [search, setSearch] = useState(false);\n  useEffect(() => {\n    if (search === false) {\n      axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_Lirix_Key}`).then(res => {\n        console.log(res.data);\n        setState({\n          track_list: res.data.message.body.track_list,\n          heading: \"Top 10 Songs\"\n        });\n      }).catch(err => console.log(err));\n    }\n  }, []);\n  useEffect(() => {\n    if (search === false) {\n      axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_Lirix_Key}`).then(res => {\n        console.log(res.data);\n        setState({\n          track_list: res.data.message.body.track_list,\n          heading: \"Top 10 Songs\"\n        });\n      }).catch(err => console.log(err));\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(TrackContext.Provider, {\n    value: [state, setState, search, setSearch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(TrackContextProvider, \"B6EoSYRVMpF5EyqJdAocapnlKN8=\");\n_c = TrackContextProvider;\nexport default TrackContextProvider;\nvar _c;\n$RefreshReg$(_c, \"TrackContextProvider\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","TrackContext","createContext","TrackContextProvider","children","_s","intialState","track_list","heading","state","setState","search","setSearch","get","process","env","REACT_APP_Lirix_Key","then","res","console","log","data","message","body","catch","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web_dev_proj_h/lyricalland/src/Context/Context.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n// import { res1 } from '../Data';\r\n\r\nexport const TrackContext = React.createContext();\r\n\r\nconst TrackContextProvider = ({children}) => {\r\n\r\n\r\n\r\n    let intialState = {\r\n        track_list: [],\r\n        heading: \"Top 10 Songs\"\r\n        // dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    const [state , setState] = useState(intialState);\r\n    const [search , setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(search === false){\r\n            axios.get(\r\n                `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_Lirix_Key}`\r\n            ).then(res => {\r\n                console.log(res.data);\r\n                setState({\r\n                    track_list : res.data.message.body.track_list,\r\n                    heading : \"Top 10 Songs\"\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    },[]);\r\n    useEffect(()=> {\r\n        if(search === false){\r\n            axios.get(\r\n                `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_Lirix_Key}`\r\n            ).then(res => {\r\n                console.log(res.data);\r\n                setState({\r\n                    track_list : res.data.message.body.track_list,\r\n                    heading : \"Top 10 Songs\"\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    },[search]);\r\n\r\n    return(\r\n        <TrackContext.Provider value={[state , setState, search , setSearch]}>{children}</TrackContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TrackContextProvider"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,YAAY,gBAAGL,KAAK,CAACM,aAAa,CAAC,CAAC;AAEjD,MAAMC,oBAAoB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAIzC,IAAIC,WAAW,GAAG;IACdC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE;IACT;EACJ,CAAC;EAED,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,WAAW,CAAC;EAChD,MAAM,CAACK,MAAM,EAAGC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,IAAGc,MAAM,KAAK,KAAK,EAAC;MAChBhB,KAAK,CAACkB,GAAG,CACL,8IAA8IC,OAAO,CAACC,GAAG,CAACC,mBAAmB,EACjL,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;QACrBX,QAAQ,CAAC;UACLH,UAAU,EAAGW,GAAG,CAACG,IAAI,CAACC,OAAO,CAACC,IAAI,CAAChB,UAAU;UAC7CC,OAAO,EAAG;QACd,CAAC,CAAC;MACN,CAAC,CAAC,CACDgB,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL5B,SAAS,CAAC,MAAK;IACX,IAAGc,MAAM,KAAK,KAAK,EAAC;MAChBhB,KAAK,CAACkB,GAAG,CACL,8IAA8IC,OAAO,CAACC,GAAG,CAACC,mBAAmB,EACjL,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;QACrBX,QAAQ,CAAC;UACLH,UAAU,EAAGW,GAAG,CAACG,IAAI,CAACC,OAAO,CAACC,IAAI,CAAChB,UAAU;UAC7CC,OAAO,EAAG;QACd,CAAC,CAAC;MACN,CAAC,CAAC,CACDgB,KAAK,CAACC,GAAG,IAAIN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC,EAAC,CAACd,MAAM,CAAC,CAAC;EAEX,oBACIX,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACC,KAAK,EAAE,CAAClB,KAAK,EAAGC,QAAQ,EAAEC,MAAM,EAAGC,SAAS,CAAE;IAAAR,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAEhH,CAAC;AAAA1B,EAAA,CA7CKF,oBAAoB;AAAA6B,EAAA,GAApB7B,oBAAoB;AA+C1B,eAAeA,oBAAoB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}